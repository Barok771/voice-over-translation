diff --git a/node_modules/vot.js/dist/config/sites.js b/node_modules/vot.js/dist/config/sites.js
index c0fda08..0b5d579 100644
--- a/node_modules/vot.js/dist/config/sites.js
+++ b/node_modules/vot.js/dist/config/sites.js
@@ -2,39 +2,77 @@ import { VideoService } from "../types/yandex.js";
 import { sitesInvidious, sitesPiped, sitesProxiTok, sitesPeertube, sitesPoketube, sitesRicktube, sitesCoursehunterLike, } from "./alternativeUrls.js";
 export default [
     {
+        additionalData: "mobile",
         host: VideoService.youtube,
         url: "https://youtu.be/",
-        match: /^((www.|m.)?youtube(-nocookie|kids)?.com)|(youtu.be)$/,
+        match: /^m.youtube.com$/,
+        selector: "shorts-video #player",
+    },
+    {
+        additionalData: "mobile",
+        host: VideoService.youtube,
+        url: "https://youtu.be/",
+        match: /^m.youtube.com$/,
+        selector: ".player-container",
+    },
+    {
+        host: VideoService.youtube,
+        url: "https://youtu.be/",
+        match: /^(www.)?youtube(-nocookie|kids)?.com$/,
+        selector: ".html5-video-container:not(#inline-player *)",
     },
     {
         host: VideoService.invidious,
         url: "https://youtu.be/",
         match: sitesInvidious,
+        selector: "#player",
+        needBypassCSP: true,
     },
     {
         host: VideoService.piped,
         url: "https://youtu.be/",
         match: sitesPiped,
+        selector: ".shaka-video-container",
+        needBypassCSP: true,
     },
     {
         host: VideoService.poketube,
         url: "https://youtu.be/",
         match: sitesPoketube,
+        selector: ".video-player-container",
     },
     {
         host: VideoService.ricktube,
         url: "https://youtu.be/",
         match: sitesRicktube,
+        selector: "#oframeplayer > pjsdiv:has(video)"
+    },
+    {
+        additionalData: "mobile",
+        host: VideoService.vk,
+        url: "https://vk.com/video?z=",
+        match: /^m.vk.(com|ru)$/,
+        selector: "vk-video-player",
+        shadowRoot: true,
+    },
+    {
+        additionalData: "clips",
+        host: VideoService.vk,
+        url: "https://vk.com/video?z=",
+        match: /^(www.|m.)?vk.(com|ru)$/,
+        selector: 'div[data-testid="clipcontainer-video"]',
     },
     {
         host: VideoService.vk,
         url: "https://vk.com/video?z=",
         match: /^(www.|m.)?vk.(com|ru)$/,
+        selector: ".videoplayer_media",
     },
     {
         host: VideoService.nine_gag,
         url: "https://9gag.com/gag/",
         match: /^9gag.com$/,
+        selector: ".video-post",
     },
     {
         host: VideoService.twitch,
@@ -45,22 +83,26 @@ export default [
             /^clips.twitch.tv$/,
             /^player.twitch.tv$/,
         ],
+        selector: ".video-ref, main > div > section > div > div > div",
     },
     {
         host: VideoService.proxitok,
         url: "https://www.tiktok.com/",
         match: sitesProxiTok,
+        selector: ".column.has-text-centered",
     },
     {
         host: VideoService.tiktok,
         url: "https://www.tiktok.com/",
         match: /^(www.)?tiktok.com$/,
+        selector: null,
     },
     {
         host: VideoService.vimeo,
         url: "https://vimeo.com/",
         match: /^vimeo.com$/,
         needExtraData: true,
+        selector: ".player",
     },
     {
         host: VideoService.vimeo,
@@ -68,207 +110,302 @@ export default [
         match: /^player.vimeo.com$/,
         additionalData: "embed",
         needExtraData: true,
+        needBypassCSP: true,
+        selector: ".player",
     },
     {
         host: VideoService.xvideos,
         url: "https://www.xvideos.com/",
         match: /^(www.)?(xvideos|xv-ru).com$/,
+        selector: ".video-bg-pic",
+        needBypassCSP: true,
     },
     {
         host: VideoService.pornhub,
         url: "https://rt.pornhub.com/view_video.php?viewkey=",
         match: /^[a-z]+.pornhub.com$/,
+        selector: ".mainPlayerDiv > .video-element-wrapper-js > div",
+        eventSelector: ".mgp_eventCatcher"
+    },
+    {
+        additionalData: "embed",
+        host: VideoService.pornhub,
+        url: "https://rt.pornhub.com/view_video.php?viewkey=",
+        match: (url) =>
+            url.host.includes("pornhub.com") && url.pathname.startsWith("/embed/"),
+        selector: "#player",
     },
     {
         host: VideoService.twitter,
         url: "https://twitter.com/i/status/",
         match: /^(twitter|x).com$/,
+        selector: 'div[data-testid="videoComponent"] > div:nth-child(1) > div',
+        eventSelector: 'div[data-testid="videoPlayer"]',
+        needBypassCSP: true,
     },
     {
         host: VideoService.rumble,
         url: "https://rumble.com/",
         match: /^rumble.com$/,
+        selector: "#videoPlayer > .videoPlayer-Rumble-cls > div",
+    },
+    {
+        host: VideoService.facebook,
+        url: "https://facebook.com/",
+        match: (url) =>
+            url.host.includes("facebook.com") && url.pathname.includes("/videos/"),
+        selector: 'div[role="main"] div[data-pagelet$="video" i]',
+        needBypassCSP: true,
     },
     {
+        additionalData: "reels",
         host: VideoService.facebook,
         url: "https://facebook.com/",
-        match: (url) => url.host.includes("facebook.com") &&
-            (url.pathname.includes("/videos/") || url.pathname.includes("/reel/")),
+        match: (url) =>
+            url.host.includes("facebook.com") && url.pathname.includes("/reel/"),
+        selector: 'div[role="main"]',
+        needBypassCSP: true,
     },
     {
         host: VideoService.rutube,
         url: "https://rutube.ru/video/",
         match: /^rutube.ru$/,
+        selector: ".video-player > div > div > div:nth-child(2)",
+    },
+    {
+        additionalData: "embed",
+        host: VideoService.rutube,
+        url: "https://rutube.ru/video/",
+        match: /^rutube.ru$/,
+        selector: "#app > div > div",
     },
     {
         host: VideoService.bilibili,
         url: "https://www.bilibili.com/",
         match: /^(www|m|player).bilibili.com$/,
+        selector: ".bpx-player-video-wrap",
+    },
+    // Добавляет лишние видео в обработчик
+    {
+        additionalData: "old", // /blackboard/webplayer/embed-old.html
+        host: VideoService.bilibili,
+        url: "https://www.bilibili.com/",
+        match: /^(www|m).bilibili.com$/,
+        selector: null,
     },
     {
         host: VideoService.mailru,
         url: "https://my.mail.ru/",
         match: /^my.mail.ru$/,
+        selector: "#b-video-wrapper",
     },
     {
         host: VideoService.bitchute,
         url: "https://www.bitchute.com/video/",
         match: /^(www.)?bitchute.com$/,
+        selector: ".video-js",
     },
     {
         host: VideoService.eporner,
         url: "https://www.eporner.com/",
         match: /^(www.)?eporner.com$/,
+        selector: ".vjs-v7",
     },
     {
         host: VideoService.peertube,
         url: "stub",
         match: sitesPeertube,
+        selector: ".vjs-v7",
     },
     {
         host: VideoService.dailymotion,
         url: "https://dai.ly/",
-        match: /^(www.)?dailymotion.com|dai.ly$/,
+        match: /^geo([\d]+)?.dailymotion.com$/,
+        selector: ".player",
     },
     {
         host: VideoService.trovo,
         url: "https://trovo.live/s/",
         match: /^trovo.live$/,
+        selector: ".player-video",
     },
     {
         host: VideoService.yandexdisk,
-        url: "https://yadi.sk/i/",
-        match: /^disk.yandex.ru|yadi.sk$/,
+        url: "https://yadi.sk/",
+        match: /^disk.yandex.ru$/,
+        selector: ".video-player__player > div:nth-child(1)",
+        eventSelector: ".video-player__player",
+        needBypassCSP: true,
+        needExtraData: true,
     },
     {
         host: VideoService.okru,
         url: "https://ok.ru/video/",
         match: /^ok.ru$/,
+        selector: ".html5-vpl_vid",
     },
     {
         host: VideoService.googledrive,
         url: "https://drive.google.com/file/d/",
-        match: /^drive.google.com$/,
+        match: /^youtube.googleapis.com$/,
+        selector: ".html5-video-container",
     },
     {
         host: VideoService.bannedvideo,
         url: "https://madmaxworld.tv/watch?id=",
         match: /^(www.)?banned.video|madmaxworld.tv$/,
+        selector: ".vjs-v7",
         needExtraData: true,
     },
     {
         host: VideoService.weverse,
         url: "https://weverse.io/",
         match: /^weverse.io$/,
+        selector: ".webplayer-internal-source-wrapper",
         needExtraData: true,
     },
     {
         host: VideoService.newgrounds,
         url: "https://www.newgrounds.com/",
         match: /^(www.)?newgrounds.com$/,
+        selector: ".ng-video-player",
     },
     {
         host: VideoService.egghead,
         url: "https://egghead.io/",
         match: /^egghead.io$/,
+        selector: ".cueplayer-react-video-holder",
     },
     {
         host: VideoService.youku,
         url: "https://v.youku.com/",
         match: /^v.youku.com$/,
+        selector: "#ykPlayer",
     },
     {
         host: VideoService.archive,
         url: "https://archive.org/details/",
         match: /^archive.org$/,
+        selector: ".jw-media",
     },
     {
         host: VideoService.kodik,
         url: "stub",
         match: /^kodik.(info|biz|cc)$/,
+        selector: ".fp-player",
         needExtraData: true,
     },
     {
         host: VideoService.patreon,
         url: "stub",
         match: /^(www.)?patreon.com$/,
+        selector:
+            'div[data-tag="post-card"] div[elevation="subtle"] > div > div > div > div',
+        needExtraData: true,
+    },
+    {
+        additionalData: "old",
+        host: VideoService.reddit,
+        url: "stub",
+        match: /^old.reddit.com$/,
+        selector: ".reddit-video-player-root",
         needExtraData: true,
+        needBypassCSP: true,
     },
     {
         host: VideoService.reddit,
         url: "stub",
-        match: /^(www.|new.|old.)?reddit.com$/,
+        match: /^(www.|new.)?reddit.com$/,
+        selector: "div[slot=post-media-container]",
+        shadowRoot: true,
         needExtraData: true,
+        needBypassCSP: true,
     },
     {
         host: VideoService.kick,
         url: "https://kick.com/",
         match: /^kick.com$/,
+        selector: "#injected-embedded-channel-player-video > div",
         needExtraData: true,
     },
     {
         host: VideoService.appledeveloper,
         url: "https://developer.apple.com/",
         match: /^developer.apple.com$/,
+        selector: ".developer-video-player",
         needExtraData: true,
+        needBypassCSP: true,
     },
     {
         host: VideoService.epicgames,
         url: "https://dev.epicgames.com/community/learning/",
         match: /^dev.epicgames.com$/,
+        selector: ".vjs-v7",
         needExtraData: true,
     },
     {
         host: VideoService.nineanimetv,
         url: "https://9animetv.to/watch/",
-        match: /^9animetv.to$/,
+        match: /^rapid-cloud.co$/,
+        selector: ".jw-media",
         needExtraData: true,
     },
     {
         host: VideoService.odysee,
         url: "stub",
         match: /^odysee.com$/,
+        selector: ".vjs-v7",
         needExtraData: true,
     },
     {
         host: VideoService.coursehunterLike,
         url: "stub",
         match: sitesCoursehunterLike,
+        selector: "#oframeplayer > pjsdiv:has(video)",
         needExtraData: true,
     },
     {
         host: VideoService.sap,
         url: "https://learning.sap.com/courses/",
         match: /^learning.sap.com$/,
+        selector: ".playkit-container",
+        eventSelector: ".playkit-player",
         needExtraData: true,
+        needBypassCSP: true,
     },
     {
         host: VideoService.watchpornto,
         url: "https://watchporn.to/",
         match: /^watchporn.to$/,
+        selector: ".fp-player",
     },
     {
         host: VideoService.linkedin,
         url: "https://www.linkedin.com/learning/",
         match: /^(www.)?linkedin.com$/,
+        selector: ".vjs-v7",
         needExtraData: true,
+        needBypassCSP: true,
     },
     {
         host: VideoService.incestflix,
         url: "https://www.incestflix.net/watch/",
         match: /^(www.)?incestflix.(net|to|com)$/,
+        selector: "#incflix-stream",
         needExtraData: true,
     },
     {
         host: VideoService.porntn,
         url: "https://porntn.com/videos/",
         match: /^porntn.com$/,
+        selector: ".fp-player",
         needExtraData: true,
     },
     {
         host: VideoService.dzen,
         url: "https://dzen.ru/video/watch/",
         match: /^dzen.ru$/,
+        selector: ".zen-ui-video-video-player"
     },
     {
         host: VideoService.custom,
